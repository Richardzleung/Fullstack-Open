{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/phonebook.js","App.js","serviceWorker.js","index.js"],"names":["Filter","filter","handleFilterChange","value","onChange","PersonForm","props","addName","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","type","Persons","persons","deleteEntry","setPersons","people","filteredList","person","name","toLowerCase","includes","map","key","className","number","onClick","Notification","message","baseUrl","getAll","axios","get","then","response","data","create","newPerson","post","updateNumber","id","updatedEntry","request","put","console","log","window","confirm","delete","entry","App","useState","setNewName","setNewNumber","setNewFilter","notification","setNotification","useEffect","phoneService","initalPhonebook","event","target","preventDefault","some","find","n","changedEntry","returnedPhonebook","setTimeout","catch","error","concat","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1acc8048.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({filter , handleFilterChange}) => {\r\n  return (\r\n    <form>\r\n        <div>\r\n        filter shown with {' '}\r\n          <input\r\n            value={filter}\r\n            onChange={handleFilterChange}\r\n          />\r\n        </div>\r\n    </form>\r\n)}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n  const {addName, newName, newNumber, \r\n          handleNameChange,handleNumberChange} = props\r\n\r\n    return (\r\n    <form onSubmit={addName}>\r\n        <div>\r\n          name: \r\n          <input value={newName} onChange={handleNameChange} />\r\n        </div>\r\n        <div>\r\n          number:\r\n          <input value={newNumber} onChange={handleNumberChange} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">\r\n            add\r\n          </button>\r\n        </div>\r\n    </form>\r\n)}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = ({persons, filter ,deleteEntry,setPersons,people}) => {\r\n  //onDeleteEntry()\r\n  const filteredList = !filter\r\n  ? persons\r\n  : persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\r\n\r\n\r\n  return (\r\n      <ul>\r\n        {filteredList.map(persons =>\r\n          <li key={persons.name} className='people'>\r\n            {persons.name} {\" \"}\r\n            {persons.number} {\" \"}\r\n            <input type=\"button\" onClick={()=>deleteEntry(persons,setPersons,people)} value='delete'/>\r\n          </li>\r\n      )}\r\n      </ul>\r\n)}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\nconst create = newPerson => {\r\n    const request = axios.post(baseUrl, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst updateNumber = (id, updatedEntry) => {\r\n  const request = axios.put(`${baseUrl}/${id}`,updatedEntry)\r\n  console.log(`url ${baseUrl}/${id} updated entry ${updatedEntry.name}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleteEntry = (persons,setPersons,people) => {\r\n  if (window.confirm(`Delete? ${persons.name}`)) { \r\n    axios\r\n      .delete(`${baseUrl}/${persons.id}`)\r\n      .then(()=>{\r\n        setPersons(people.filter(entry => entry.id !== persons.id))\r\n      })\r\n  }\r\n  return null\r\n}\r\n  \r\nexport default { getAll,create , updateNumber, deleteEntry}","import React, { useState , useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport phoneService from './services/phonebook'\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([\n    /*\n    { name: 'Arto Hellas' , number: '040-1234567'},\n    { name: 'Ada Lovelace', number: '39-44-5323523' },\n    { name: 'Dan Abramov', number: '12-43-234345' },\n    { name: 'Mary Poppendieck', number: '39-23-6423122' } */\n  ]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setNewFilter ] = useState('')\n  const [notification, setNotification] = useState(null)\n  const handleNameChange = (event) => setNewName(event.target.value)  \n  const handleNumberChange = (event) => setNewNumber(event.target.value)  \n  const handleFilterChange = (event) => setNewFilter(event.target.value)  \n  \n  useEffect(() => {\n    phoneService\n      .getAll()\n      .then(initalPhonebook => {\n        setPersons(initalPhonebook)\n      })\n  }, [])\n\n  const addName= (event) => {   \n    event.preventDefault()\n    if (persons.some(entry => entry.name === newName)) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with the new one?`)) {\n        const person = persons.find(n => n.name === newName)\n        const changedEntry = { ...person, number:newNumber }\n        console.log('changed entry' , changedEntry, 'id')\n        phoneService\n          .updateNumber(person.id,changedEntry).then(returnedPhonebook => {\n            setPersons(persons.map(entry => entry.id !== person.id ? entry : returnedPhonebook))\n            console.log(`array ${persons.map(entry => entry.id !== person.id ? entry : returnedPhonebook)}`)\n            setNotification(`Updated ${newName}`)\n            setTimeout(()=>{\n              setNotification(null)\n            },3000)\n          })\n          .catch(error => {\n            setNotification(`the entry '${newName}' was already deleted from server`)\n            setTimeout(()=>{\n              setNotification(null)\n            },3000)\n            //setPersons(persons.filter(n => n.id !== person.id)) \n          })\n      }\n    }\n    else {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      }    \n      phoneService\n        .create(personObject)\n        .then(newPerson => {\n          setPersons(persons.concat(newPerson))\n          setNotification(`Added ${newName}`)\n          setTimeout(()=>{\n            setNotification(null)\n          },1500)\n          setNewName('')\n          setNewNumber('')\n          setNewFilter('')\n        })\n        .catch(error => {\n          console.log('fail')\n        })\n    }\n  }\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification}/>\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\n      <h3>Add a new</h3>\n      <PersonForm \n        addName={addName}\n        newName={newName} \n        newNumber={newNumber} \n        handleNameChange={handleNameChange} \n        handleNumberChange={handleNumberChange}/>\n      <h3>Numbers</h3>\n      <Persons persons={persons} filter={filter} deleteEntry={phoneService.deleteEntry} setPersons={setPersons} people={persons}/>\n    </div>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}